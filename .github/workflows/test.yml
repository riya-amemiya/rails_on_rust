name: Test

on:
    push:
        branches: [beta]
    pull_request:
        branches: [beta]

env:
    CARGO_TERM_COLOR: always
jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.8'
                  architecture: 'x64'
            - name: Get Python version
              run: python -V
            - name: Install dependencies
              run: pip install -r requirements.txt
            - name: Run Python
              run: python setup.py build_ext --inplace
            - name: Run Python Test
              run: python test.py
            - name: Run Rust Test
              run: make rust_build && cargo test --verbose

    build:
        needs: test
        strategy:
            matrix:
                node: ['12', '14', '16']
                python: [3.5, 3.6, 3.7, 3.8]
        runs-on: ubuntu-latest
        name: Node Version ${{ matrix.node }} Python Version ${{ matrix.python }}
        steps:
            - uses: actions/checkout@v2
            - name: Setup Python Version ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}
                  architecture: 'x64'
            - name: Get Python version
              run: python -V
            - name: Install dependencies
              run: pip install -r requirements.txt
            - name: Run Python
              run: python setup.py build_ext --inplace
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}
            - uses: borales/actions-yarn@v2.3.0
              with:
                  cmd: install
            - uses: borales/actions-yarn@v2.3.0
              with:
                  cmd: build_git # will run `yarn build` command
            - uses: borales/actions-yarn@v2.3.0
              with:
                  cmd: test # will run `yarn test` command
            - name: cache node_modules
              id: node_modules_cache_id
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                  key: node-v${{ matrix.node-version }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
            - name: Build
              run: make -C app/javascript/wasm wasm-build && make rust_build && ls
